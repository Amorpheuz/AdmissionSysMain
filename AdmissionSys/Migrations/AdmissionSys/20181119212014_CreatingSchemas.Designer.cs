// <auto-generated />
using System;
using AdmissionSys.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace AdmissionSys.Migrations.AdmissionSys
{
    [DbContext(typeof(AdmissionSysContext))]
    [Migration("20181119212014_CreatingSchemas")]
    partial class CreatingSchemas
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("AdmissionSys.Models.AcademicRecord", b =>
                {
                    b.Property<int>("AcademicRecordID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("BoardOrUni")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.Property<string>("ExamName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("LangOfInstruction")
                        .IsRequired()
                        .HasMaxLength(60);

                    b.Property<string>("MarksObtained")
                        .IsRequired();

                    b.Property<decimal>("MeritNumber");

                    b.Property<DateTime>("MonthYearOfPass");

                    b.Property<string>("RollNumber")
                        .IsRequired()
                        .HasMaxLength(60);

                    b.Property<string>("SchoolOrCollegeName")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.Property<DateTime>("ScoreValidity");

                    b.Property<int?>("StudentID");

                    b.HasKey("AcademicRecordID");

                    b.HasIndex("StudentID");

                    b.ToTable("AcademicRecord");
                });

            modelBuilder.Entity("AdmissionSys.Models.AcademicYear", b =>
                {
                    b.Property<int>("AcademicYearID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("AcaYear");

                    b.Property<DateTime>("EndDate");

                    b.Property<int>("IntakeCapacity");

                    b.Property<string>("ProgramsID");

                    b.Property<DateTime>("StartDate");

                    b.HasKey("AcademicYearID");

                    b.HasIndex("ProgramsID");

                    b.ToTable("AcademicYear");
                });

            modelBuilder.Entity("AdmissionSys.Models.ApplicationList", b =>
                {
                    b.Property<int>("ApplicationListID")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("AcademicYearID");

                    b.Property<string>("ApplicationCategory")
                        .IsRequired();

                    b.Property<string>("PrioAreaOfResearch");

                    b.Property<string>("Status")
                        .IsRequired();

                    b.Property<int?>("StudentID");

                    b.HasKey("ApplicationListID");

                    b.HasIndex("AcademicYearID");

                    b.HasIndex("StudentID");

                    b.ToTable("ApplicationList");
                });

            modelBuilder.Entity("AdmissionSys.Models.Documents", b =>
                {
                    b.Property<string>("DocumentsID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("DocumentPath");

                    b.Property<int?>("StudentID");

                    b.HasKey("DocumentsID");

                    b.HasIndex("StudentID");

                    b.ToTable("Documents");
                });

            modelBuilder.Entity("AdmissionSys.Models.Programs", b =>
                {
                    b.Property<string>("ProgramsID");

                    b.Property<string>("ProgramName")
                        .IsRequired();

                    b.HasKey("ProgramsID");

                    b.ToTable("Programs");
                });

            modelBuilder.Entity("AdmissionSys.Models.Student", b =>
                {
                    b.Property<int>("StudentID");

                    b.Property<string>("AadharNumber");

                    b.Property<string>("ApplicantsMobileNumber")
                        .IsRequired();

                    b.Property<string>("BloodGroup")
                        .IsRequired();

                    b.Property<int?>("Caste");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(25);

                    b.Property<DateTime>("DateOfBirth");

                    b.Property<decimal>("FamilyIncome");

                    b.Property<int>("Gender");

                    b.Property<string>("GuardianMobileNumber")
                        .IsRequired();

                    b.Property<string>("GuradianOccupation")
                        .HasMaxLength(20);

                    b.Property<string>("Nationality")
                        .IsRequired()
                        .HasMaxLength(25);

                    b.Property<string>("PHStatus")
                        .IsRequired();

                    b.Property<string>("PlaceOfBirth")
                        .IsRequired()
                        .HasMaxLength(25);

                    b.Property<string>("PostalCode")
                        .IsRequired();

                    b.Property<string>("RelWithGuardian")
                        .IsRequired();

                    b.Property<string>("ResidencePhone");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(25);

                    b.Property<string>("StudentAddress")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.Property<string>("StudentGuradianName")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("StudentName")
                        .IsRequired()
                        .HasMaxLength(60);

                    b.Property<string>("StudentPhoto")
                        .IsRequired();

                    b.Property<string>("StudentSignature")
                        .IsRequired();

                    b.Property<string>("userID");

                    b.HasKey("StudentID");

                    b.HasIndex("userID");

                    b.ToTable("Student");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccessFailedCount");

                    b.Property<string>("ConcurrencyStamp");

                    b.Property<string>("Email");

                    b.Property<bool>("EmailConfirmed");

                    b.Property<bool>("LockoutEnabled");

                    b.Property<DateTimeOffset?>("LockoutEnd");

                    b.Property<string>("NormalizedEmail");

                    b.Property<string>("NormalizedUserName");

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed");

                    b.Property<string>("SecurityStamp");

                    b.Property<bool>("TwoFactorEnabled");

                    b.Property<string>("UserName");

                    b.HasKey("Id");

                    b.ToTable("IdentityUser");
                });

            modelBuilder.Entity("AdmissionSys.Models.AcademicRecord", b =>
                {
                    b.HasOne("AdmissionSys.Models.Student", "Student")
                        .WithMany("AcademicRecords")
                        .HasForeignKey("StudentID");
                });

            modelBuilder.Entity("AdmissionSys.Models.AcademicYear", b =>
                {
                    b.HasOne("AdmissionSys.Models.Programs", "Programs")
                        .WithMany("AcademicYears")
                        .HasForeignKey("ProgramsID");
                });

            modelBuilder.Entity("AdmissionSys.Models.ApplicationList", b =>
                {
                    b.HasOne("AdmissionSys.Models.AcademicYear", "AcademicYear")
                        .WithMany("ApplicationLists")
                        .HasForeignKey("AcademicYearID");

                    b.HasOne("AdmissionSys.Models.Student", "Student")
                        .WithMany("ApplicationLists")
                        .HasForeignKey("StudentID");
                });

            modelBuilder.Entity("AdmissionSys.Models.Documents", b =>
                {
                    b.HasOne("AdmissionSys.Models.Student", "Student")
                        .WithMany("Documents")
                        .HasForeignKey("StudentID");
                });

            modelBuilder.Entity("AdmissionSys.Models.Student", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "IdentityUser")
                        .WithMany()
                        .HasForeignKey("userID");
                });
#pragma warning restore 612, 618
        }
    }
}
